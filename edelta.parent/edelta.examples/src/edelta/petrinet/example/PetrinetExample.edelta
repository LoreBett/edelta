import edelta.refactorings.lib.EdeltaRefactorings
import java.util.List
import org.eclipse.emf.ecore.EAttribute
import org.eclipse.emf.ecore.EClass

// IMPORTANT: ecores must be in a source directory
// otherwise you can't refer to them
package edelta.petrinet.example

metamodel "petrinet" 
metamodel "ecore"

use EdeltaRefactorings as refactorings

//Petrinet MM0-MM1

def addWeightAttribute(EClass c) {
	c.addNewEAttribute("weight", ecoreref(EInt)) [
		lowerBound = 1
	]
}

modifyEcore modifyPetrinetLowerbounds epackage petrinet {
	ecoreref(places).lowerBound = 1
	ecoreref(transitions).lowerBound = 1
}

modifyEcore renameNet epackage petrinet {
	ecoreref(Net).name = "Petrinet"
}

modifyEcore introducePTArc epackage petrinet {
	addNewEClass("PTArc") [
		refactorings.extractMetaClass(it, ecoreref(Place.dst), 'in', 'out')
		addWeightAttribute
	]
}

modifyEcore introduceTPArc epackage petrinet {
	addNewEClass("TPArc") [
		refactorings.extractMetaClass(it, ecoreref(Transition.dst), 'in', 'out')
		addWeightAttribute
	]
}

modifyEcore introduceAbstractArc epackage petrinet {
	addNewEClass("Arc") [
		abstract = true
		val List<EAttribute> attributes = #[ecoreref(PTArc.weight), ecoreref(TPArc.weight)]
		refactorings.extractSuperclass(it, attributes);
	]
}
